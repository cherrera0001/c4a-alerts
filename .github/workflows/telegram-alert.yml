name: C4A Telegram Alerts

on:
  schedule:
    - cron: '0 */2 * * *'   # Ejecutar cada 2 horas
  workflow_dispatch:

jobs:
  send_alerts:
    runs-on: ubuntu-latest

    permissions:
      id-token: write       # Para autenticaci√≥n federada con Google Cloud (WIF)
      contents: read

    steps:
      - name: üì• Clonar el repositorio
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Autenticaci√≥n con Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
          export_environment_variables: true
          create_credentials_file: true

      - name: üêç Configurar entorno Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: üì¶ Instalar dependencias
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: '1'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üö® Ejecutar sistema de alertas
        env:
          # Telegram / otros ya existentes
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
          GIST_ID: ${{ secrets.GIST_ID }}
          GHSA_TOKEN: ${{ secrets.GHSA_TOKEN }}
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
          LOOKER_SHEET_ID: ${{ secrets.LOOKER_SHEET_ID }}
          ENABLE_OPENAI: "false"
          HF_HUB_DISABLE_TELEMETRY: "1"
          HF_HUB_DISABLE_PROGRESS_BARS: "1"

          # üîê ANCI / MISP (nuevo)
          # Si el secret a√∫n est√° con el typo (ANCT_BASE_URL), el OR hace fallback.
          ANCI_BASE_URL: ${{ secrets.ANCI_BASE_URL || secrets.ANCT_BASE_URL }}
          ANCI_USERNAME: ${{ secrets.ANCI_USERNAME }}
          ANCI_PASSWORD: ${{ secrets.ANCI_PASSWORD }}
        run: python main.py

      - name: ‚úÖ Confirmar ejecuci√≥n exitosa
        if: success()
        run: echo "‚úîÔ∏è Ejecuci√≥n finalizada correctamente"
